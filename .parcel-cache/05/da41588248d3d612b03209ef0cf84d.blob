'use strict';

require("core-js/modules/web.immediate.js");

require("core-js/modules/web.url.js");

require("core-js/modules/web.url.to-json.js");

require("core-js/modules/web.url-search-params.js");

var model = _interopRequireWildcard(require("./model.js"));

var _recipeView = _interopRequireDefault(require("./views/recipeView.js"));

var _searchView = _interopRequireDefault(require("./views/searchView.js"));

var _views = _interopRequireDefault(require("./views"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://forkify-api.herokuapp.com/v2
///////////////////////////////////////////////////////////
const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);
    if (!id) return; // Render Spinning Loader

    _recipeView.default.renderSpinner(); // Load Recipe


    await model.loadRecipe(id); // Render Recipe

    _recipeView.default.render(model.state.recipe);
  } catch (err) {
    // console.error(`Custom_controller: ${err.message}`);
    _recipeView.default.renderError();
  }
};

const controlSearchResults = async function () {
  try {
    // 1) Get search query
    const query = _searchView.default.getQuery();

    if (!query) return; // 2) Load search results

    await model.loadSearchResults(query); // 3) Render search results

    console.log(model.state.search.results);
  } catch (err) {
    console.log(`My error - controller: ${err}`);
  }
}; // ['hashchange', 'load'].forEach(ev => 
// window.addEventListener(ev, controlRecipes)
// );
// window.addEventListener('hashchange', controlRecipes);
// window.addEventListener('load', controlRecipes);


const init = function () {
  _recipeView.default.addHandlerRender(controlRecipes);

  _searchView.default.addHandlerSearch(controlSearchResults);
};

init();
document.querySelector('.header__logo').addEventListener('click', e => window.location = '');